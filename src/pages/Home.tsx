import CompetitionCard from "@/components/CompetitionCard";
import { mockCompetitions, mockUsers, competitionCategories } from "@/lib/mockData";
import { Button } from "@/components/ui/button";
import { useNavigate } from "react-router-dom";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar";
import { CheckCircle, School, MapPin, Star, Target, Calendar as CalendarIcon } from "lucide-react";
import { cn } from "@/lib/utils";
import { Link } from "react-router-dom";
import { Badge } from "@/components/ui/badge";
import { Search, ArrowRight, Trophy, Users } from "lucide-react";

function UserCard({ user }) {
  const navigate = useNavigate();
  return (
    <Card className="card-hover cursor-pointer" onClick={() => navigate(`/user/${user.id}`)}>
      <CardHeader className="pb-3">
        <div className="flex items-start space-x-4 w-full">
          <Avatar className="h-16 w-16">
            <AvatarImage src={user.avatar} alt={user.fullName} />
            <AvatarFallback className="text-lg">
              {user.fullName
                .split(" ")
                .map((n) => n[0])
                .join("")}
            </AvatarFallback>
          </Avatar>
          <div className="flex-1 text-left">
            <h3 className="font-bold text-lg text-left mb-1 flex items-center gap-2">
              {user.fullName}
              {user.isVerified && (
                <CheckCircle className="h-5 w-5 text-blue-500" />
              )}
            </h3>
            <div className="flex items-center mb-1">
              {[...Array(5)].map((_, i) => (
                <Star
                  key={i}
                  className={cn(
                    "h-4 w-4",
                    i < Math.floor(user.rating)
                      ? "fill-yellow-400 text-yellow-400"
                      : "text-gray-300",
                  )}
                />
              ))}
              <span className="text-sm text-muted-foreground ml-1">
                ({user.rating})
              </span>
            </div>
            <p className="text-sm text-muted-foreground mb-1 text-left">
              @{user.username}
            </p>
            <p className="text-sm text-muted-foreground mb-1 text-left flex items-center">
              <School className="h-4 w-4 mr-1" />
              {user.school}
            </p>
            <p className="text-sm text-muted-foreground mb-2 text-left flex items-center">
              <MapPin className="h-4 w-4 mr-1" />
              {user.location.city}
            </p>
            <div className="space-y-1 text-xs text-muted-foreground mb-2">
              <div className="flex items-center">
                <CalendarIcon className="h-3 w-3 mr-1" />
                Tham gia t·ª´ {user.joinDate ? new Date(user.joinDate).toLocaleDateString('vi-VN', { month: 'long', year: 'numeric' }) : ''}
              </div>
              <div className="flex items-center">
                <span>Chuy√™n ng√†nh: {user.studyField}</span>
              </div>
            </div>
          </div>
        </div>
      </CardHeader>
    </Card>
  );
}

export default function Home() {
  const navigate = useNavigate();
  const competitions = mockCompetitions.slice(0, 5);
  const users = mockUsers.slice(0, 5);

  return (
    <div className="min-h-screen bg-background">
      {/* Hero Section */}
      <section className="relative overflow-hidden bg-competition-hero py-20">
        <div className="absolute inset-0 bg-grid-white/10 bg-grid-16" />
        <div className="container relative px-4 sm:px-6 lg:px-8">
          <div className="mx-auto max-w-4xl text-center text-white">
            <Badge className="mb-4 bg-white/20 text-white border-white/30">
              üéâ M·ªõi: T√≠ch h·ª£p l·ªãch Google Calendar
            </Badge>
            <h1 className="mb-6 text-4xl font-bold tracking-tight sm:text-6xl">
              N·ªÅn t·∫£ng cu·ªôc thi <br />
              <span className="text-white/90">h√†ng ƒë·∫ßu Vi·ªát Nam</span>
            </h1>
            <p className="mb-8 text-lg text-white/80 sm:text-xl max-w-2xl mx-auto">
              Kh√°m ph√°, tham gia v√† k·∫øt n·ªëi v·ªõi h√†ng ngh√¨n cu·ªôc thi ch·∫•t l∆∞·ª£ng. X√¢y d·ª±ng portfolio c√° nh√¢n v√† t√¨m ki·∫øm ƒë·ªëi t√°c ph√π h·ª£p v·ªõi k·ªπ nƒÉng c·ªßa b·∫°n.
            </p>
            <div className="flex flex-col sm:flex-row justify-center gap-4">
              <Button
                size="lg"
                className="bg-white text-competition hover:bg-white/90"
              >
                <Search className="mr-2 h-5 w-5" />
                Kh√°m ph√° cu·ªôc thi
              </Button>
              <Button
                size="lg"
                className="bg-white text-competition hover:bg-white/90"
                asChild
              >
                <Link to="/community">
                  T√¨m b·∫°n thi
                  <ArrowRight className="ml-2 h-5 w-5" />
                </Link>
              </Button>
            </div>
          </div>
        </div>
      </section>
      <div className="container py-8 space-y-12">
        {/* Competition Thumbnail Section */}
        <section>
          <h2 className="text-3xl font-extrabold mb-4 inline-block border-b-4 border-primary pb-1 bg-gradient-to-r from-primary to-purple-500 bg-clip-text text-transparent">
            Kh√°m ph√° cu·ªôc thi
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6 mb-4">
            {competitions.map((competition) => (
              <CompetitionCard key={competition.id} competition={competition} />
            ))}
          </div>
          <Button onClick={() => navigate("/")}>Xem th√™m cu·ªôc thi</Button>
        </section>

        {/* Friend Suggestion Section */}
        <section>
          <h2 className="text-3xl font-extrabold mb-4 inline-block border-b-4 border-primary pb-1 bg-gradient-to-r from-primary to-purple-500 bg-clip-text text-transparent">
            T√¨m b·∫°n thi
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6 mb-4">
            {users.map((user) => (
              <UserCard key={user.id} user={user} />
            ))}
          </div>
          <Button onClick={() => navigate("/community")}>Xem th√™m b·∫°n thi</Button>
        </section>
        {/* Categories Section */}
        <section className="py-16 bg-muted/30">
          <div className="container px-4 sm:px-6 lg:px-8">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold mb-4">Kh√°m ph√° theo lƒ©nh v·ª±c</h2>
              <p className="text-muted-foreground max-w-2xl mx-auto">
                T√¨m ki·∫øm cu·ªôc thi ph√π h·ª£p v·ªõi s·ªü th√≠ch v√† k·ªπ nƒÉng c·ªßa b·∫°n
              </p>
            </div>
            <div className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-8 gap-4">
              {competitionCategories.map((category) => (
                <Card
                  key={category.name}
                  className="group cursor-pointer card-hover text-center p-4"
                >
                  <div className="text-3xl mb-2">{category.icon}</div>
                  <div className="text-sm font-medium group-hover:text-primary transition-colors">
                    {category.label}
                  </div>
                </Card>
              ))}
            </div>
          </div>
        </section>
        {/* Features Section */}
        <section className="py-16">
          <div className="container px-4 sm:px-6 lg:px-8">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold mb-4">
                T·∫°i sao ch·ªçn Contest Buddy?
              </h2>
              <p className="text-muted-foreground max-w-2xl mx-auto">
                N·ªÅn t·∫£ng to√†n di·ªán gi√∫p b·∫°n ph√°t tri·ªÉn k·ªπ nƒÉng v√† x√¢y d·ª±ng m·∫°ng l∆∞·ªõi
              </p>
            </div>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              <Card className="text-center p-6">
                <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mx-auto mb-4">
                  <Target className="h-6 w-6 text-blue-600" />
                </div>
                <h3 className="font-semibold mb-2">G·ª£i √Ω th√¥ng minh</h3>
                <p className="text-sm text-muted-foreground">
                  Thu·∫≠t to√°n AI g·ª£i √Ω cu·ªôc thi v√† ƒë·ªëi t√°c ph√π h·ª£p v·ªõi k·ªπ nƒÉng, tr∆∞·ªùng h·ªçc v√† khu v·ª±c c·ªßa b·∫°n
                </p>
              </Card>
              <Card className="text-center p-6">
                <div className="w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mx-auto mb-4">
                  <Users className="h-6 w-6 text-purple-600" />
                </div>
                <h3 className="font-semibold mb-2">Portfolio c√° nh√¢n</h3>
                <p className="text-sm text-muted-foreground">
                  X√¢y d·ª±ng h·ªì s∆° c√¥ng khai v·ªõi th√†nh t√≠ch, k·ªπ nƒÉng v√† nh·∫≠n ƒë√°nh gi√° t·ª´ c·ªông ƒë·ªìng
                </p>
              </Card>
              <Card className="text-center p-6">
                <div className="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mx-auto mb-4">
                  <CalendarIcon className="h-6 w-6 text-green-600" />
                </div>
                <h3 className="font-semibold mb-2">Qu·∫£n l√Ω l·ªãch thi</h3>
                <p className="text-sm text-muted-foreground">
                  T·ª± ƒë·ªông ƒë·ªìng b·ªô v·ªõi Google Calendar v√† nh·∫≠n th√¥ng b√°o deadline theo c√†i ƒë·∫∑t c√° nh√¢n
                </p>
              </Card>
            </div>
          </div>
        </section>
      </div>
    </div>
  );
} 